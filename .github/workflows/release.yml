name: 🚀 Release

on:
  push:
    branches:
      - main
      - alpha
      - beta

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  test:
    name: 🧪 Run Tests
    uses: open-sauced/open-sauced/.github/workflows/development.yml@main

  docker:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: ☁️ Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🧩 Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=sha

      - name: 📦 Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker,dest=/tmp/docker.tar
          push: ${{ github.ref == 'refs/heads/main' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 📂 Upload Docker artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker
          path: /tmp/docker.tar

  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    steps:
      - name: ☁️ Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 🧰 Update npm
        run: npm i -g npm@latest

      - name: 📦 Install dependencies
        uses: bahmutov/npm-install@v1

      - name: 📊 Generate repository diagram
        id: diagram
        uses: githubocto/repo-visualizer@0.7.1
        with:
          excluded_paths: "node_modules,build,.storybook,.netlify,.github,npm-shrinkwrap.json"
          output_file: "public/diagram.svg"
          should_push: false
          root_path: "src/"
          artifact_name: "diagram"

      - name: 🚀 Build static app
        run: npm run build

      - name: 📂 Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build

  release:
    name: 🏁 Semantic Release
    environment:
      name: production
      url: https://github.com/${{ github.repository }}/releases/tag/${{ steps.semantic-release.outputs.release-tag }}
    needs:
      - test
      - docker
      - build
    runs-on: ubuntu-latest
    steps:
      - name: ☁️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📂 Download Docker artifact
        uses: actions/download-artifact@v4
        with:
          name: docker
          path: /tmp

      - name: 📦 Load Docker image
        run: |
          docker load --input /tmp/docker.tar
          docker image ls -a

      - name: 📂 Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      - name: 📂 Download diagram artifact
        uses: actions/download-artifact@v4
        with:
          name: diagram
          path: .

      - name: 🚀 Run Semantic Release
        id: semantic-release
        uses: open-sauced/semantic-release-conventional-config@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    name: ♻️ Cleanup Artifacts
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: 🧹 Delete artifacts
        uses: geekyeggo/delete-artifact@v3
        with:
          name: |
            build
            docker
            diagram
