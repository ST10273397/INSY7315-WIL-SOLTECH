name: 🚀 Release

on:
  push:
    branches:
      - main
      - alpha
      - beta

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build:
    name: 🏗️ Build and Test .NET App
    runs-on: ubuntu-latest
    steps:
      - name: ☁️ Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: 📦 Restore dependencies
        run: dotnet restore ElevatedTutorsWebsite/ElevatedTutorsWebsite.csproj

      - name: 🧪 Build project
        run: dotnet build ElevatedTutorsWebsite/ElevatedTutorsWebsite.csproj --configuration Release --no-restore

      - name: 🧪 Run tests
        run: dotnet test ElevatedTutorsWebsite/ElevatedTutorsWebsite.csproj --no-build --verbosity normal

      - name: 📦 Publish app
        run: dotnet publish ElevatedTutorsWebsite/ElevatedTutorsWebsite.csproj -c Release -o ./publish

      - name: 📂 Upload published app
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-publish
          path: publish

  docker:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: ☁️ Checkout repository
        uses: actions/checkout@v4

      - name: 📂 Download published app
        uses: actions/download-artifact@v4
        with:
          name: dotnet-publish
          path: ./publish

      - name: 🔧 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🧩 Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=sha

      - name: 📦 Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.ref == 'refs/heads/main' }}

  release:
    name: 🏁 Semantic Release
    runs-on: ubuntu-latest
    needs: [docker]
    steps:
      - name: ☁️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🚀 Run Semantic Release
        uses: open-sauced/semantic-release-conventional-config@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    name: ♻️ Cleanup Artifacts
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: 🧹 Delete artifacts
        uses: geekyeggo/delete-artifact@v3
        with:
          name: dotnet-publish
