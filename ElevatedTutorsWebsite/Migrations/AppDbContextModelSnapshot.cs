// <auto-generated />
using System;
using ElevatedTutorsWebsite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElevatedTutorsWebsite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.AdminUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<DateTime>("SessionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SessionNumber")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentUserId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TotalSessions")
                        .HasColumnType("int");

                    b.Property<int>("TutorUserId")
                        .HasColumnType("int");

                    b.HasKey("SessionId");

                    b.HasIndex("StudentUserId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TutorUserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.StudentUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Marks")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("ParentEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("StudentUsers");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<int?>("StudentUserId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TutorUserId")
                        .HasColumnType("int");

                    b.HasKey("SubjectId");

                    b.HasIndex("StudentUserId");

                    b.HasIndex("TutorUserId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.Submission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionId"));

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Grade")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SubmissionId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.TutorUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("TutorUsers");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.AdminUser", b =>
                {
                    b.HasOne("ElevatedTutorsWebsite.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("ElevatedTutorsWebsite.Models.AdminUser", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.Session", b =>
                {
                    b.HasOne("ElevatedTutorsWebsite.Models.StudentUser", "StudentUser")
                        .WithMany("Sessions")
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ElevatedTutorsWebsite.Models.Subject", "Subject")
                        .WithMany("Sessions")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ElevatedTutorsWebsite.Models.TutorUser", "TutorUser")
                        .WithMany("Sessions")
                        .HasForeignKey("TutorUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StudentUser");

                    b.Navigation("Subject");

                    b.Navigation("TutorUser");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.StudentUser", b =>
                {
                    b.HasOne("ElevatedTutorsWebsite.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("ElevatedTutorsWebsite.Models.StudentUser", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.Subject", b =>
                {
                    b.HasOne("ElevatedTutorsWebsite.Models.StudentUser", "StudentUser")
                        .WithMany("Subjects")
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ElevatedTutorsWebsite.Models.TutorUser", "TutorUser")
                        .WithMany("Subjects")
                        .HasForeignKey("TutorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("StudentUser");

                    b.Navigation("TutorUser");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.Submission", b =>
                {
                    b.HasOne("ElevatedTutorsWebsite.Models.Subject", "Subject")
                        .WithMany("Submissions")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ElevatedTutorsWebsite.Models.StudentUser", "StudentUser")
                        .WithMany("Submissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("StudentUser");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.TutorUser", b =>
                {
                    b.HasOne("ElevatedTutorsWebsite.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("ElevatedTutorsWebsite.Models.TutorUser", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.StudentUser", b =>
                {
                    b.Navigation("Sessions");

                    b.Navigation("Subjects");

                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.Subject", b =>
                {
                    b.Navigation("Sessions");

                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("ElevatedTutorsWebsite.Models.TutorUser", b =>
                {
                    b.Navigation("Sessions");

                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
