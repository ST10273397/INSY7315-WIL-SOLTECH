@using ElevatedTutors.ViewModel


@model List<TutorSubmissionViewModel>
@* 
    View: Submissions.cshtml
    Folder: Tutor
    Purpose: Render the Submissions page for Tutor controller.
    Notes: Updated for consistent layout, error handling, anti-forgery protection, and safe rendering.
*@

@* Begin model null-safety wrapper *@
@if (Model == null)
{
    <div class="alert alert-warning" role="alert">
        No data available to display.
    </div>
}
else
{

{
    Layout = "~/Views/Shared/_TutorLayout.cshtml";
    ViewData["Title"] = "Task Submissions";
}

<h2 class="mb-4">Task Submissions</h2>

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}

<table class="table table-striped table-hover align-middle">
    <thead class="table-dark">
        <tr>
            <th>Student</th>
            <th>Subject</th>
            <th>Files</th>
            <th>Results</th>
            <th>Status</th>
            <th>Feedback</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.StudentFullName</td>
                <td>@item.SubjectName</td>
                <td>@item.FileCount file@(item.FileCount == 1 ? "" : "s")</td>
                <td>@(item.Grade == 0 ? "—" : item.Grade.ToString("0.##"))</td>
                <td>
                    @{
                        string badgeClass = item.Status switch
                        {
                            "Complete" => "bg-success",
                            "Overdue" => "bg-danger",
                            "Pending" => "bg-warning text-dark",
                            _ => "bg-secondary"
                        };
                    }
                    <span class="badge @badgeClass">@item.Status</span>
                </td>
                <td>
                    <button class="btn btn-sm btn-primary"
                            data-bs-toggle="modal"
                            data-bs-target="#submissionModal"
                            data-student="@item.StudentFullName"
                            data-title="@item.Title"
                            data-grade="@item.Grade"
                            data-notes="@item.Notes"
                            data-id="@item.SubmissionId">
                        Give Feedback
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- submission modal -->
<div class="modal fade" id="submissionModal" tabindex="-1" aria-labelledby="submissionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-3 shadow">
            <div class="modal-header bg-dark text-white">
                <h5 class="modal-title" id="submissionModalLabel">Submission Details</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>

            <div class="modal-body">
                
                <div id="viewSection">
                    <div class="mb-3">
                        <label class="form-label">Student</label>
                        <input type="text" id="viewStudentName" class="form-control" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Title</label>
                        <input type="text" id="viewTitle" class="form-control" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Grade</label>
                        <input type="text" id="viewGrade" class="form-control" readonly />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Feedback</label>
                        <textarea id="viewFeedback" class="form-control" rows="3" readonly></textarea>
                    </div>
                </div>

                <!-- edit marks form -->
                <form id="editMarksForm" method="post" asp-action="UpdateMarks" asp-controller="Tutor" class="d-none">
    @Html.AntiForgeryToken()
<input type="hidden" id="editSubmissionId" name="submissionId" />
                    <div class="mb-3">
                        <label class="form-label">New Grade</label>
                        <input type="number" id="editGrade" name="grade" class="form-control" required />
                    </div>
                    <button type="submit" class="btn btn-primary">Save Marks</button>
                    <button type="button" class="btn btn-secondary cancelBtn">Cancel</button>
                </form>

                <!-- feedback form -->
                <form id="feedbackForm" method="post" asp-action="UpdateFeedback" asp-controller="Tutor" class="d-none">
    @Html.AntiForgeryToken()
<input type="hidden" id="feedbackSubmissionId" name="submissionId" />
                    <div class="mb-3">
                        <label class="form-label">Feedback</label>
                        <textarea id="editFeedback" name="notes" class="form-control" rows="4" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-success">Save Feedback</button>
                    <button type="button" class="btn btn-secondary cancelBtn">Cancel</button>
                </form>
            </div>

            <div class="modal-footer">
                <div id="defaultButtons">
                    <button class="btn btn-primary" id="openEditMarksBtn">Edit Marks</button>
                    <button class="btn btn-success" id="openFeedbackBtn">Feedback</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/tutor-submissions.js"></script>
}
}
@* End model wrapper *@
